"use client"

import type React from "react"
import { useState } from "react"
import {
  AppBar,
  Toolbar,
  Button,
  Typography,
  Container,
  Paper,
  Box,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Grid,
  CardContent,
  FormHelperText,
} from "@mui/material"
import {
  CloudUpload as UploadIcon,
  Description as FileIcon,
  Storage as DatabaseIcon,
  FolderOpen as FolderIcon,
} from "@mui/icons-material"
import { ThemeProvider, createTheme } from "@mui/material/styles"
import CssBaseline from "@mui/material/CssBaseline"

// Material UIのテーマを作成
const theme = createTheme({
  palette: {
    primary: {
      main: "#1976d2",
    },
    secondary: {
      main: "#f50057",
    },
    background: {
      default: "#f5f5f5",
    },
  },
  typography: {
    fontFamily: ['"Hiragino Kaku Gothic ProN"', '"Hiragino Sans"', '"Noto Sans JP"', "Meiryo", "sans-serif"].join(","),
  },
})

export default function DataSourceStorage() {
  const [selectedSection, setSelectedSection] = useState<string>("")
  const [selectedCategory, setSelectedCategory] = useState<string>("")
  const [selectedFile, setSelectedFile] = useState<File | null>(null)

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      setSelectedFile(e.target.files[0])
    }
  }

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <Box sx={{ flexGrow: 1, minHeight: "100vh", bgcolor: "background.default" }}>
        <AppBar position="sticky">
          <Toolbar>
            <Box sx={{ display: "flex", flexGrow: 1 }}>
              <Button color="inherit">検索</Button>
              <Button color="inherit">カテゴリ管理</Button>
              <Button color="inherit">データソース保存</Button>
            </Box>
            <Button color="inherit">言語</Button>
          </Toolbar>
        </AppBar>

        <Container maxWidth="lg" sx={{ py: 4 }}>
          <Paper
            elevation={3}
            sx={{
              maxWidth: 800,
              mx: "auto",
              mt: 4,
              overflow: "hidden",
              borderRadius: 2,
            }}
          >
            <Box
              sx={{
                textAlign: "center",
                py: 3,
                borderBottom: "1px solid #eee",
              }}
            >
              <Box sx={{ display: "flex", alignItems: "center", justifyContent: "center", gap: 1 }}>
                <DatabaseIcon color="primary" />
                <Typography variant="h4" component="h1" gutterBottom={false} fontWeight="bold">
                  データソース保存
                </Typography>
              </Box>
              <Typography variant="subtitle1" color="text.secondary">
                ファイルをアップロードして保存します
              </Typography>
            </Box>

            <CardContent sx={{ p: 4 }}>
              <Grid container spacing={3}>
                <Grid item xs={12} md={6}>
                  <FormControl fullWidth variant="outlined">
                    <InputLabel id="section-select-label">セクションを選択してください</InputLabel>
                    <Select
                      labelId="section-select-label"
                      value={selectedSection}
                      onChange={(e) => setSelectedSection(e.target.value as string)}
                      label="セクションを選択してください"
                    >
                      <MenuItem value="section1">セクション 1</MenuItem>
                      <MenuItem value="section2">セクション 2</MenuItem>
                      <MenuItem value="section3">セクション 3</MenuItem>
                    </Select>
                  </FormControl>
                </Grid>
                <Grid item xs={12} md={6}>
                  <FormControl fullWidth variant="outlined">
                    <InputLabel id="category-select-label">カテゴリを選択してください</InputLabel>
                    <Select
                      labelId="category-select-label"
                      value={selectedCategory}
                      onChange={(e) => setSelectedCategory(e.target.value as string)}
                      label="カテゴリを選択してください"
                    >
                      <MenuItem value="category1">カテゴリ 1</MenuItem>
                      <MenuItem value="category2">カテゴリ 2</MenuItem>
                      <MenuItem value="category3">カテゴリ 3</MenuItem>
                    </Select>
                  </FormControl>
                </Grid>
              </Grid>

              <Box
                sx={{
                  mt: 4,
                  p: 4,
                  border: "2px dashed #ccc",
                  borderRadius: 2,
                  textAlign: "center",
                }}
              >
                {selectedFile ? (
                  <Box
                    sx={{
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center",
                      gap: 1,
                      color: "primary.main",
                    }}
                  >
                    <FileIcon fontSize="large" />
                    <Typography variant="h6">{selectedFile.name}</Typography>
                  </Box>
                ) : (
                  <Box>
                    <FolderIcon sx={{ fontSize: 60, color: "text.disabled", mb: 1 }} />
                    <Typography color="text.secondary" sx={{ mb: 2 }}>
                      ファイルが選択されていません
                    </Typography>
                  </Box>
                )}

                <Box
                  sx={{
                    mt: 3,
                    display: "flex",
                    flexDirection: { xs: "column", sm: "row" },
                    gap: 2,
                    justifyContent: "center",
                  }}
                >
                  <Button variant="contained" component="label" startIcon={<UploadIcon />}>
                    ファイルを選択
                    <input type="file" hidden onChange={handleFileChange} accept=".pdf,.doc,.docx,.xls,.xlsx,.txt" />
                  </Button>
                  <Button variant="outlined" disabled={!selectedFile || !selectedSection || !selectedCategory}>
                    アップロード
                  </Button>
                </Box>
                <FormHelperText sx={{ mt: 2, textAlign: "center" }}>
                  サポートされているファイル形式: PDF, DOC, DOCX, XLS, XLSX, TXT
                </FormHelperText>
              </Box>
            </CardContent>
          </Paper>
        </Container>
      </Box>
    </ThemeProvider>
  )
}
